{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshashish/Downloads/Web Development/Code With Harry/textutils/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light'); //tells whether dark mode is enable or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const greenToggleMode = () => {\n    if (mode === 'light') {\n      setMode('green');\n      document.body.style.backgroundColor = 'green';\n      showAlert(\"Red mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#212529';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode,\n        greenToggleMode: greenToggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \"Enter the text to analyse\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","About","Alert","Navbar","TextForm","BrowserRouter","Router","Switch","Route","Link","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","greenToggleMode","document","body","style","backgroundColor","toggleMode"],"sources":["/Users/utkarshashish/Downloads/Web Development/Code With Harry/textutils/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light'); //tells whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },1500)\n  }\n\n  const greenToggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('green')\n      document.body.style.backgroundColor = 'green'\n      showAlert(\"Red mode has been enabled\",\"success\")\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\",\"success\")\n    }\n  }\n  \n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#212529'\n      showAlert(\"Dark mode has been enabled\",\"success\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\",\"success\")\n    }\n  }\n  return (\n    <><Router>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} greenToggleMode={greenToggleMode}/>\n      <Alert alert={alert}></Alert>\n      <div className=\"container my-3\"> \n      <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyse\" mode={mode}/>\n          </Route>\n        </Switch>\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;;;;AASA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,OAAD,CAAhC,CAFa,CAE8B;;EAC3C,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMe,SAAS,GAAG,CAACC,OAAD,EAASC,IAAT,KAAgB;IAChCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OADE;MAEPC,IAAI,EAAEA;IAFC,CAAD,CAAR;IAIAE,UAAU,CAAC,MAAI;MACbL,QAAQ,CAAC,IAAD,CAAR;IACD,CAFS,EAER,IAFQ,CAAV;EAGD,CARD;;EAUA,MAAMM,eAAe,GAAG,MAAI;IAC1B,IAAGT,IAAI,KAAK,OAAZ,EAAoB;MAClBC,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAT,SAAS,CAAC,2BAAD,EAA6B,SAA7B,CAAT;IACD,CAJD,MAIK;MACHH,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAT,SAAS,CAAC,6BAAD,EAA+B,SAA/B,CAAT;IACD;EACF,CAVD;;EAaA,MAAMU,UAAU,GAAG,MAAI;IACrB,IAAGd,IAAI,KAAK,OAAZ,EAAoB;MAClBC,OAAO,CAAC,MAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC;MACAT,SAAS,CAAC,4BAAD,EAA8B,SAA9B,CAAT;IACD,CAJD,MAKI;MACFH,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAT,SAAS,CAAC,6BAAD,EAA+B,SAA/B,CAAT;IACD;EACF,CAXD;;EAYA,oBACE;IAAA,uBAAE,QAAC,MAAD;MAAA,wBACA,QAAC,MAAD;QAAQ,KAAK,EAAC,WAAd;QAA0B,IAAI,EAAEJ,IAAhC;QAAsC,UAAU,EAAEc,UAAlD;QAA8D,eAAe,EAAEL;MAA/E;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,QAAC,KAAD;QAAO,KAAK,EAAEP;MAAd;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACA,QAAC,MAAD;UAAA,wBACI,QAAC,KAAD;YAAO,IAAI,EAAC,QAAZ;YAAA,uBACE,QAAC,KAAD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADJ,eAII,QAAC,KAAD;YAAO,IAAI,EAAC,GAAZ;YAAA,uBACA,QAAC,QAAD;cAAU,SAAS,EAAEE,SAArB;cAAgC,OAAO,EAAC,2BAAxC;cAAoE,IAAI,EAAEJ;YAA1E;cAAA;cAAA;cAAA;YAAA;UADA;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADA;QAAA;QAAA;QAAA;MAAA,QAHA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAF,iBADF;AAiBD;;GAzDQD,G;;KAAAA,G;AA2DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}